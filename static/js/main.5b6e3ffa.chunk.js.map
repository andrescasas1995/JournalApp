{"version":3,"sources":["hooks/useForm.jsx","firebase/firebase-config.jsx","types/types.jsx","actions/ui.jsx","helpers/fileUpload.js","actions/notes.jsx","actions/auth.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.jsx","components/journal/JournalEntry.jsx","components/journal/JournalEntries.jsx","components/journal/Sidebar.jsx","components/notes/NotesAppBar.jsx","components/notes/NoteScreen.jsx","components/journal/NothingSelected.jsx","components/journal/JournalScreen.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","reducers/uiReducer.jsx","reducers/notesReducer.jsx","store/store.jsx","reducers/authReducer.jsx","JournalApp.jsx","index.jsx"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAutProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","id","note","setNotes","notes","startSaveNote","dispatch","getState","uid","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","displayName","login","catch","console","log","message","logut","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","required","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormatValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","collection","add","NotesAppBar","fileSelector","useRef","active","ref","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","current","click","NoteScreen","activeId","useEffect","delete","NothingSelected","JournalScreen","PrivateRoute","props","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","compProps","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","get","notesSnap","forEach","snapChile","push","data","basename","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b6e3ffa.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBM8bACib0NUS89mZVI5yPk1WLOOu5v6H4\",\r\n    authDomain: \"react-app-cursos-31180.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-cursos-31180.firebaseio.com\",\r\n    projectId: \"react-app-cursos-31180\",\r\n    storageBucket: \"react-app-cursos-31180.appspot.com\",\r\n    messagingSenderId: \"1036827059786\",\r\n    appId: \"1:1036827059786:web:8fc1dfd6e842fbb19768b3\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAutProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAutProvider,\r\n    firebase\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note saved',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import { types } from '../types/types';\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dyzglszmt/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const { auth: { uid } } = getState();\r\n        const { notes } = getState().notes;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(setNotes([{id: doc.id,...newNote}, ...notes]));\r\n        dispatch(activeNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const loadNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n        const notes = [];\r\n\r\n        notesSnap.forEach(snapChile => {\r\n            notes.push({\r\n                id: snapChile.id,\r\n                ...snapChile.data()\r\n            });\r\n        });\r\n\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n};\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading..',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n        \r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote));\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n        Swal.fire('Deleted', \"\", 'success');\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});\r\n","import Swal from 'sweetalert2'\r\nimport { firebase, googleAutProvider } from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\";\r\nimport { startLoading, finishLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                const { displayName, uid } = user;\r\n                dispatch(login(uid, displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', err.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name })\r\n                const { displayName, uid } = user;\r\n                dispatch(login(uid, displayName));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Swal.fire('Error', err.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAutProvider)\r\n            .then(({ user }) => {\r\n                const { displayName, uid } = user;\r\n                dispatch(login(uid, displayName));\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logut());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logut = () => ({\r\n    type: types.logout\r\n});","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui);\r\n    const [formValues, handleInputChange] = useForm({\r\n        // email: 'andrescasas@gmail.com',\r\n        // password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={handleLogin}\r\n            >\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"off\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-secondary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p className=\"auth__title\">Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                    <Link\r\n                        className=\"link\"\r\n                        to=\"/auth/register\"\r\n                    >\r\n                        Create new acount\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n    const [formValues, handleInputChange] = useForm({\r\n        // name: 'Andres Casas',\r\n        // email: 'andrescasas@gmail.com',\r\n        // password: '123456',\r\n        // password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormatValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormatValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if ( password !== password2 || password2.length < 6) {\r\n            dispatch(setError('Password should be at least 5 characters and march each other'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={handleRegister}\r\n            >\r\n                {msgError && \r\n                    <div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"off\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    autoComplete=\"off\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-secondary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n                <div className=\"text-right\">\r\n                    <Link\r\n                        className=\"link\"\r\n                        to=\"/auth/login\"\r\n                    >\r\n                        Already registered?\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path='/auth/login' component={LoginScreen} />\r\n                    <Route path='/auth/register' component={RegisterScreen} />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, { date, title, body, url }));\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"journal__entry animate__animated animate__fadeIn\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            {!!url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                />\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format(\"dddd\")}</span>\r\n                <span><b>{noteDate.format(\"Do\")}</b></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => <JournalEntry key={note.id} {...note} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n    const handleLogOut = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogOut}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div\r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = ({date}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const fileSelector = useRef(null);\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote( active ));\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        fileSelector.current.click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</span>\r\n            <input\r\n                ref={fileSelector}\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: \"none\"}}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureUpload}\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { active: note } = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const { date, title, body } = formValues;\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if (activeId.current !== note.id) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(activeId.current));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content animate__animated animate__backInDown animate__faster\">\r\n            <NotesAppBar date={date} />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    name=\"body\"\r\n                    placeholder=\"What happend today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </textarea>\r\n                {note.url \r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src={note.url}\r\n                                alt=\"Ecrypse\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\n// import { NothingSelected } from './NothingSelected'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n    const { active } = useSelector(state => state.notes)\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (!!active)\r\n                    ? (<NoteScreen />)\r\n                    : (<NothingSelected />)\r\n                }\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { bool, func} from 'prop-types';\r\n\r\nexport const PrivateRoute = (props) => {\r\n    const { isAuthenticated, component: Component, ...rest } = props;\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(compProps) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...compProps} />)\r\n                    : (<Redirect to='/auth/login' />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: bool.isRequired,\r\n    component: func.isRequired\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { bool, func} from 'prop-types';\r\n\r\nexport const PublicRoute = (props) => {\r\n    const { isAuthenticated, component: Component, ...rest } = props;\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(compProps) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...compProps} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: bool.isRequired,\r\n    component: func.isRequired\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { loadNotes } from \"../actions/notes\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(loadNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Loading...</h1>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router basename=\"/\">\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: action.payload\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return initialState\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport'./styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}